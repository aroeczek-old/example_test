---
http_interactions:
- request:
    method: get
    uri: http://time.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 10 Feb 2019 19:24:25 GMT
      Server:
      - nginx/1.10.3 (Ubuntu)
      X-Powered-By:
      - Element
      Cache-Control:
      - max-age=5
      Etag:
      - W/"7108-zbodKpQuWkqOgikuQbMSmIHUQj8"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 5d40d4ac7c3a1e18748166636540091f.cloudfront.net (CloudFront)
      X-Amz-Cf-Id:
      - 2KHrlccLWqcLEWBNzk7bC6sDIkJBLLFMVu3NQsGLTbJ7K-HQA3nLYg==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 10 Feb 2019 19:23:39 GMT
recorded_with: VCR 4.0.0
